From b08e794c87d72963ea45db7a67ffeda10775f3bf Mon Sep 17 00:00:00 2001
From: Sofi <sofi+git@mailbox.org>
Date: Mon, 6 Jun 2022 17:14:24 +0200
Subject: [PATCH] Remove `std::process::ExitCode`

Nixpkgs 22.05 does not ship with Rust 1.61 by default.
So the use of ExitCode will be patched out.
---
 Cargo.toml  | 2 +-
 src/main.rs | 9 ++++-----
 2 files changed, 5 insertions(+), 6 deletions(-)

diff --git a/Cargo.toml b/Cargo.toml
index 9283776..6f5ae0d 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -2,7 +2,7 @@
 name = "ferium"
 version = "4.1.4"
 edition = "2021"
-rust-version = "1.61"
+rust-version = "1.60"
 authors = [
     "Ilesh Thiada (theRookieCoder) <ileshkt@gmail.com>",
     "薛詠謙 (KyleUltimate)",
diff --git a/src/main.rs b/src/main.rs
index 958432e..79e1dea 100644
--- a/src/main.rs
+++ b/src/main.rs
@@ -17,7 +17,7 @@ use libium::config::{
 };
 use octocrab::OctocrabBuilder;
 use online::check;
-use std::{process::ExitCode, sync::Arc};
+use std::sync::Arc;
 use tokio::{runtime, spawn};
 
 const CROSS: &str = "×";
@@ -35,7 +35,7 @@ lazy_static! {
         .progress_chars("#>-");
 }
 
-fn main() -> ExitCode {
+fn main() {
     let cli = Ferium::parse();
     let mut builder = runtime::Builder::new_multi_thread();
     builder.enable_all();
@@ -47,9 +47,8 @@ fn main() -> ExitCode {
     let runtime = builder.build().expect("Could not initialise Tokio runtime");
     if let Err(err) = runtime.block_on(actual_main(cli)) {
         eprintln!("{}", err.to_string().red().bold());
-        ExitCode::FAILURE
-    } else {
-        ExitCode::SUCCESS
+        runtime.shutdown_background();
+        std::process::exit(1);
     }
 }
 
-- 
2.36.0

